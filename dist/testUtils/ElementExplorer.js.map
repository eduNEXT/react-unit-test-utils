{"version":3,"file":"ElementExplorer.js","names":["isEqual","ElementExplorer","constructor","element","toSnapshot","parent","arguments","length","undefined","el","props","type","children","map","child","findByTestId","testId","elements","findChildrenByTestId","push","forEach","findByType","typeString","name","findChildrenByType","data","out","matches","toCheck","snapshot"],"sources":["../../src/testUtils/ElementExplorer.js"],"sourcesContent":["import { isEqual } from 'lodash';\n\nclass ElementExplorer {\n  constructor(element, toSnapshot, parent = null) {\n    this.el = element;\n    this.toSnapshot = toSnapshot;\n    this.props = {};\n    this.type = null;\n    this.children = [];\n    this.parent = parent;\n    if (element.type) {\n      this.props = element.props;\n      this.type = element.type;\n    }\n    if (element.children) {\n      this.children = element.children.map(child => new ElementExplorer(child, toSnapshot, this));\n    }\n  }\n\n  findByTestId(testId) {\n    const elements = [];\n    const findChildrenByTestId = (el) => {\n      if (el.props['data-testid'] === testId) {\n        elements.push(el);\n      }\n      el.children.forEach(child => {\n        findChildrenByTestId(child);\n      });\n    };\n    findChildrenByTestId(this);\n    return elements;\n  }\n\n  findByType(type) {\n    const typeString = typeof type === 'string' ? type : type.name;\n    const elements = [];\n    const findChildrenByType = (el) => {\n      if (el.type === typeString) {\n        elements.push(el);\n      }\n      el.children.forEach(child => {\n        findChildrenByType(child);\n      });\n    };\n    findChildrenByType(this);\n    return elements;\n  }\n\n  get data() {\n    const out = {\n      props: this.props,\n      type: this.type,\n      children: this.children.map(child => child.data),\n    };\n    if (this.type === null) {\n      out.el = this.el;\n    }\n    return out;\n  }\n\n  matches(el) {\n    const toCheck = el.data ? el.data : el;\n    return isEqual(toCheck, this.data);\n  }\n\n  get snapshot() {\n    return this.toSnapshot(this.el);\n  }\n}\n\nexport default ElementExplorer;\n"],"mappings":"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","ignoreList":[]}