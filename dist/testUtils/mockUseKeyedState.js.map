{"version":3,"file":"mockUseKeyedState.js","names":["utils","MockUseKeyedState","constructor","stateKeys","keys","hookSpy","jest","spyOn","values","initValues","setState","mock","bind","restore","mockVal","setup","mockHook","mockVals","resetVals","Object","forEach","key","fn","val","mockImplementation","mockKey","mockImplementationOnce","newVal","mapping","mockRestore","expectInitializedWith","value","expect","toEqual","expectSetStateCalledWith","toHaveBeenCalledWith","mockUseKeyedState"],"sources":["../../src/testUtils/mockUseKeyedState.js"],"sourcesContent":["import * as utils from '../utils';\n\n/**\n * Mock utility for working with useState in a hooks module.\n * Expects/requires an object containing the state object in order to ensure\n * the mock behavior works appropriately.\n *\n * Expected format:\n *   hooks = { state: { <key>: (val) => React.createRef(val), ... } }\n *\n * Returns a utility for mocking useState and providing access to specific state values\n * and setState methods, as well as allowing per-test configuration of useState value returns.\n *\n * Example usage:\n *   // hooks.js\n *   import * as module from './hooks';\n *   import { useKeyedState, StrictDict } from '@edx/react-unit-test-utils';\n *\n *   const stateKeys = StrictDict({\n *     isOpen: 'isOpen',\n *     hasDoors: 'hasDoors',\n *     selected: 'selected',\n *   });\n *   ...\n *   export const exampleHook = () => {\n *     const [isOpen, setIsOpen] = useKeyedState(stateKeys.isOpen, false);\n *     const handleClickOpen = () => {\n *       setIsOpen(true);\n *     };\n *     if (!isOpen) { return null; }\n *     return { isOpen, setIsOpen, handleClickOpen };\n *   }\n *   ...\n *\n *   // hooks.test.js\n *   import * as hooks from './hooks';\n *   import { mockUseKeyedState } from '@edx/react-unit-test-utils';\n *   const state = mockUseKeyedState(hooks.stateKeys)\n *   ...\n *   describe('exampleHook', () => {\n *     let out;\n *     beforeEach(() => {\n *       state.mock();\n *       out = exampleHook();\n *     });\n *     describe('behavior', () => {\n *       it('initializes state hooks', () => {\n *         state.expectInitializedWith(state.keys.isOpen, false);\n *       });\n *     });\n *     describe('output', () => {\n *       it('returns null if isOpen is default value', () => {\n *         expect(out).toEqual(null);\n *       });\n *       describe('if isOpen is not false', () => {\n *         beforeEach(() => {\n *           state.mockVal(state.keys.isOpen, true);\n *           out = exampleHook();\n *         });\n *         it('forwards isOpen and setIsOpen from state hook', () => {\n *           expect(out.isOpen).toEqual(state.values.isOpen);\n *           expect(out.setIsOpen).toEqual(state.setState.isOpen);\n *         });\n *         test('handleClickOpen sets isOpen to true', () => {\n *           out.handleClickOpen();\n *           state.expectSetStateCalledWith(state.keys.isOpen, true);\n *         });\n *       });\n *     });\n *     afterEach(() => { state.restore(); });\n *   });\n *\n * @param {obj} hooks - hooks module containing a 'state' object\n */\nexport class MockUseKeyedState {\n  constructor(stateKeys) {\n    this.keys = stateKeys;\n    this.hookSpy = jest.spyOn(utils, 'useKeyedState');\n    this.values = {};\n    this.initValues = {};\n    this.setState = {};\n\n    this.mock = this.mock.bind(this);\n    this.restore = this.restore.bind(this);\n    this.mockVal = this.mockVal.bind(this);\n    this.setup = this.setup.bind(this);\n    this.mockHook = this.mockHook.bind(this);\n    this.mockVals = this.mockVals.bind(this);\n    this.resetVals = this.resetVals.bind(this);\n    this.setup();\n  }\n\n  setup() {\n    this.values = {};\n    this.initValues = {};\n    this.setState = {};\n    Object.keys(this.keys).forEach((key) => {\n      this.values[key] = null;\n      this.setState[key] = jest.fn((val) => {\n        this.values[key] = val;\n      });\n    });\n  }\n\n  mockHook(key, val) {\n    this.initValues[key] = val;\n    this.values[key] = val;\n    return [this.values[key], this.setState[key]];\n  }\n\n  /**\n   * Replace the hook module's state object with a mocked version, initialized to default values.\n   */\n  mock() {\n    this.hookSpy.mockImplementation(this.mockHook);\n  }\n\n  /**\n   * Mock the state getter associated with a single key to return a specific value one time.\n   *\n   * @param {string} mockKey - state key (from this.keys)\n   * @param {any} val - new value to be returned by the useState call.\n   */\n  mockVal(mockKey, val) {\n    this.hookSpy.mockImplementationOnce((key, newVal) => {\n      if (key === mockKey) {\n        this.values[key] = val;\n        this.initValues[key] = newVal;\n        return [val, this.setState[key]];\n      }\n      return this.mockHook(key);\n    });\n  }\n\n  /**\n   * Mock the state getters associated with set of single keys to return specific values one time.\n   *\n   * @param {object} mapping - { <stateKey>: <val to return> }\n   */\n  mockVals(mapping) {\n    this.hookSpy.mockImplementation((key, val) => {\n      if (mapping[key]) {\n        this.values[key] = mapping[key];\n        this.initValues[key] = val;\n        return [mapping[key], this.setState[key]];\n      }\n      return this.mockHook(key);\n    });\n  }\n\n  /**\n   * Reset hook value mappings after multi-value override\n   */\n  resetVals() {\n    this.hookSpy.mockImplementation(this.mockHook);\n  }\n\n  /**\n   * Restore the hook module's state object to the actual code.\n   */\n  restore() {\n    this.hookSpy.mockRestore();\n  }\n\n  expectInitializedWith(key, value) {\n    expect(this.initValues[key]).toEqual(value);\n  }\n\n  expectSetStateCalledWith(key, value) {\n    expect(this.setState[key]).toHaveBeenCalledWith(value);\n  }\n}\n\nexport const mockUseKeyedState = (stateKeys) => new MockUseKeyedState(stateKeys);\n\nexport default mockUseKeyedState;\n"],"mappings":"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","ignoreList":[]}